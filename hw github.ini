1. Создайте текстоовый файл как в первом ДЗ по Terminal.
2. Сценарий перенесите в этот файл.
3. На против каждого действия - напишите команду в GitBash
JSON
4. Создать внешний репозиторий c названием JSON.
 https://github.com/TatianaSobolevskaya/JSON
5. Клонировать репозиторий JSON на локальный компьютер. 
 git clone https://github.com/TatianaSobolevskaya/JSON.git
6. Внутри локального JSON создать файл “new.json”.
 touch new.json
7. Добавить файл под гит.
 git add new.json
8. Закоммитить файл.
 git commit -m "new"
9. Отправить файл на внешний GitHub репозиторий.
 git push 
10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата).
 Всё написать в формате JSON. 
 code new.json
 {
    "firstName": "Tatiana",
    "lastName": "Sobolevskaya",
    "surName": "Yuryevna",
    "age": 26,
    "desiredSalary": 1000,
    "desiredSalaryCurrency": "USD",
    "petsPresence": true,
    "pets": { 
        "petsNumber": 1,
        "petsType": "Dog",
        "petsName": "Barney"
    }
}
11. Отправить изменения на внешний репозиторий.
git commit -m "new"
git push
12. Создать файл preferences.json
touch preferences.json
13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
code preferences.json
{
    "favoriteMovie": null,
    "favoriteSeries": "Fisher",
    "favoriteFood": "Sushi",
    "favoriteSeason": "Summer",
    "relevantCountry": "India"
}
14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
touch skills.json
{
    "Theory": ["Basic theory","HTTP","Json","XML","Logs","VPN","Mobile testing","Data bases","Scrum methodologies","Test design techniques"],
    "Practice":["Api-testing","Devtools","Postman","SQL","Adb","Charles","Fiddler","Terminal","Postgres","Redis","Jmeter","Python"] 
}

15. Отправить сразу 2 файла на внешний репозиторий.
git add .
git commit -m "2files"
git push
16. На веб интерфейсе создать файл 
  add file -> create new file
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit changes
18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
edit this file
{ 
  "Summary": "Неверная формулировка текста подсказки под полем ввода email на странице авторизации",
  "Severity": "Trivial",
  "Component": "Authorization",
  "FixVersion": "2.5.6.8",
  "Priority": "Hight",
  "Status": "Open",
  "Author": "Tatiana Sobolevskaya",
  "Reporter": "Tatiana Sobolevskaya",
  "Assigned To": "Some business analyst",
  "Description": {
    "Steps to reproduce": {
      "Step1": "Перейти на страницу авторизации http://shop.bugred.ru/user/login/index"
    },
    "Result": "Неверная формулировка текста подсказки под полем ввода email",
    "Attachment": "https://ltdfoto.ru/images/2023/08/11/Screenshot_1.png",
    "Expected Result": "Ожидается текст, который по своему содержанию не навредит репутации компании"
  },
  "Environment":{
    "Browser":"Google chrome, версия 115.0.5790.171",
    "System":"Windows 11 Pro, версия 22H2"
  } 
}
19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit changes
20. Синхронизировать внешний и локальный репозиторий JSON
git pull

XML
 21. Создать внешний репозиторий c названием XML. 
  https://github.com/TatianaSobolevskaya/XML.git
 22. Клонировать репозиторий XML на локальный компьютер.
  git clone https://github.com/TatianaSobolevskaya/XML.git
 23. Внутри локального XML создать файл “new.xml”. 
 touch new.xml
 24. Добавить файл под гит.
  git add .
 25. Закоммитить файл. 
 git commit -m "newFile"
 26. Отправить файл на внешний GitHub репозиторий.
  git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата).
  Всё написать в формате XML.
  <?xml version="1.0" encoding="UTF-8" ?>
<new>
  <firstName>Tatiana</firstName>
  <lastName>Sobolevskaya</lastName>
  <surName>Yuryevna</surName>
  <age>26</age>
  <desiredSalary>1000</desiredSalary>
  <desiredSalaryCurrency>USD</desiredSalaryCurrency>
  <petsPresence>true</petsPresence>
  <pets>
    <petsNumber>1</petsNumber>
    <petsType>Dog</petsType>
    <petsName>Barney</petsName>
  </pets>
</new>
 28. Отправить изменения на внешний репозиторий.
 git commit
 git push

 29. Создать файл preferences.xml
 touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить)
  в формате XML.
  <?xml version="1.0" encoding="UTF-8" ?>
<preferences>
  <favoriteMovie/>
  <favoriteSeries>Fisher</favoriteSeries>
  <favoriteFood>Sushi</favoriteFood>
  <favoriteSeason>Summer</favoriteSeason>
  <relevantCountry>India</relevantCountry>
</preferences>
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 touch skills.xml
 <?xml version="1.0" encoding="UTF-8" ?>
<skills>
  <Theory>Basic theory</Theory>
  <Theory>HTTP</Theory>
  <Theory>Json</Theory>
  <Theory>XML</Theory>
  <Theory>Logs</Theory>
  <Theory>VPN</Theory>
  <Theory>Mobile testing</Theory>
  <Theory>Data bases</Theory>
  <Theory>Scrum methodologies</Theory>
  <Theory>Test design techniques</Theory>
  <Practice>Api-testing</Practice>
  <Practice>Devtools</Practice>
  <Practice>Postman</Practice>
  <Practice>SQL</Practice>
  <Practice>Adb</Practice>
  <Practice>Charles</Practice>
  <Practice>Fiddler</Practice>
  <Practice>Terminal</Practice>
  <Practice>Postgres</Practice>
  <Practice>Redis</Practice>
  <Practice>Jmeter</Practice>
  <Practice>Python</Practice>
</skills>
 32. Сделать коммит в одну строку.
    git commit -am 
 33. Отправить сразу 2 файла на внешний репозиторий.
 git push
 34. На веб интерфейсе создать файл 
  add file -> create new file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 +
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 <?xml version="1.0" encoding="UTF-8" ?>
<bug_report>
  <Summary>Неверная формулировка текста подсказки под полем ввода email на странице авторизации</Summary>
  <Severity>Trivial</Severity>
  <Component>Authorization</Component>
  <FixVersion>2.5.6.8</FixVersion>
  <Priority>Hight</Priority>
  <Status>Open</Status>
  <Author>Tatiana Sobolevskaya</Author>
  <Reporter>Tatiana Sobolevskaya</Reporter>
  <Description>
    <Result>Неверная формулировка текста подсказки под полем ввода email</Result>
    <Attachment>https://ltdfoto.ru/images/2023/08/11/Screenshot_1.png</Attachment>
    <Steps_to_reproduce>
      <Step1>Перейти на страницу авторизации http://shop.bugred.ru/user/login/index</Step1>
    </Steps_to_reproduce>
    <Expected_Result>Ожидается текст, который по своему содержанию не навредит репутации компании</Expected_Result>
  </Description>
  <Environment>
    <Browser>Google chrome, версия 115.0.5790.171</Browser>
    <System>Windows 11 Pro, версия 22H2</System>
  </Environment>
  <Assigned_To>Some business analyst</Assigned_To>
</bug_report>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 +
 38. Синхронизировать внешний и локальный репозиторий XML
git pull
TXT
 1. Создать внешний репозиторий c названием TXT.
 https://github.com/TatianaSobolevskaya/TXT.git
 2. Клонировать репозиторий TXT на локальный компьютер.
 git clone https://github.com/TatianaSobolevskaya/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.
 touch new.txt
 4. Добавить файл под гит.
 git add .
 5. Закоммитить файл.
 git commit -m "new"
 6. Отправить файл на внешний GitHub репозиторий.
 git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
 Всё написать в формате TXT.
 +
 8. Отправить изменения на внешний репозиторий.
 git add .
 git commit -m"myInfo"
 git push
 9. Создать файл preferences.txt
 touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) 
 в формате TXT.
 +
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
touch skills.txt
 12. Сделать коммит в одну строку.
 git commit -am 
 13. Отправить сразу 2 файла на внешний репозиторий.
 git push
 14. На веб интерфейсе создать файл bug_report.txt.
 add file -> create new file
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Commit changes
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 +
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT
 git pull